apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-openshift-builds/release?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/pipeline: "pipelines/konflux-build-multi-platform.yaml"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "pull_request" &&
      target_branch == "main" &&
      (
        files.all.exists(x, x.matches('pipelines/konflux-build-multi-platform.yaml')) ||
        files.all.exists(x, x.matches('.tekton/openshift-builds-operator-test.yaml'))
      )
  labels:
    appstudio.openshift.io/application: openshift-builds-test
    appstudio.openshift.io/component: openshift-builds-operator-test
    pipelines.appstudio.openshift.io/type: build
  name: openshift-builds-operator-test
  namespace: rh-openshift-builds-tenant
spec:
  displayName: "OpenShift Builds Operator Build Test"
  params:
  - name: git-url
    value: https://github.com/redhat-openshift-builds/operator.git
  - name: revision
    value: main
  - name: output-image
    value: quay.io/redhat-user-workloads/rh-openshift-builds-tenant/openshift-builds-operator-test:{{revision}}
  - name: image-expires-after
    value: 1d
  - name: dockerfile
    value: Dockerfile
  - name: build-source-image
    value: "true"
  - name: hermetic
    value: "true"
  - name: build-platforms
    value:
      - linux/x86_64
      - linux/arm64
  - name: prefetch-input
    value: '{"packages": [{"type": "gomod"}]}'
  pipelineRef:
    name: konflux-build-multi-platform
  taskRunTemplate: {}
  workspaces:
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
status: {}
